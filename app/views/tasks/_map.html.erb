<div class="row">
  <div class="col-lg-12">

  </div>
</div>
<div id="map" style="height: 400px"></div>
<% content_for :maps do %>
  <script>
    function initMap() {
      const directionsRenderer = new google.maps.DirectionsRenderer();
      const directionsService = new google.maps.DirectionsService();
      const myLatLng = { lat: <%=task.latitude%>, lng: <%=task.longitude%> };
      const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 13,
        center: myLatLng,
      });
      const contentString =
        '<div>' +
          '<div>' +
          "</div>" +
          '<h5 class="firstHeading"><%=task.title%></h5>' +
          '<div id="bodyContent">' +
            "<p><%=task.description%></p>"
          "</div>" +
        "</div>";
      const infowindow = new google.maps.InfoWindow({
        content: contentString,
      });
      const marker = new google.maps.Marker({
        position: myLatLng,
        map,
        title: "<%=task.title%>",
      });

      marker.addListener("click", () => {
        infowindow.open({
          anchor: marker,
          map,
          shouldFocus: false,
        });
      });
      setMarkers(map);
      directionsRenderer.setMap(map);
    }

    function calcRoute(directionsService, directionsRenderer,start,end) {
      var request = {
        origin: start,
        destination: end,
        travelMode: 'DRIVING'
      };
      directionsService.route(request, function(result, status) {
        directionsRenderer.setDirections(null);
        if (status == 'OK') {
          directionsRenderer.setDirections(result);
        }
      });
    }



    function setMarkers(map) {
      // Adds markers to the map.
      // Marker sizes are expressed as a Size of X,Y where the origin of the image
      // (0,0) is located in the top left of the image.
      // Origins, anchor positions and coordinates of the marker increase in the X
      // direction to the right and in the Y direction down.
      // Shapes define the clickable region of the icon. The type defines an HTML
      // <area> element 'poly' which traces out a polygon as a series of X,Y points.
      // The final coordinate closes the poly by connecting to the first coordinate.
      var employees = <%= raw Employee.actives.pluck(:name, :latitude, :longitude, :address) %>
      var task = <%= raw [task.title, task.address] %>
      var taskTitle = task[0]
      var taskAddress = task[1]

      employees.forEach(employee => {
        console.log(employee)
        var employeeName = employee[0];
        var employeeLatitude = employee[1];
        var employeeLongitude = employee[2];
        var employeeAddress = employee[2];

        var marker = new google.maps.Marker({
          position: { lat: employeeLatitude, lng: employeeLongitude },
          map,
          icon: {
            path: google.maps.SymbolPath.FORWARD_OPEN_ARROW,
            scale: 5,
          },

          title: employeeName
        });

        var contentString = '<div><p class="firstHeading">Operador: '+employeeName+'</p><a class="btn btn-primary btn-sm" href="javascript:;" onClick="calcRoute(directionsService, directionsRenderer,\''+employeeAddress+'\', \''+taskAddress+'\')">Ativar operador para esta tarefa</a></div>';
        var infowindow = new google.maps.InfoWindow({
          content: contentString,
        });

        marker.addListener("click", () => {
          infowindow.open({
            anchor: marker,
            map,
            shouldFocus: false,
          });
        });

      });
    }
  </script>
  <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaTn_usj9Wm4Zwwd1kNNVPUR9aZwwXIkQ&callback=initMap&v=weekly"
      async
    ></script>
<% end %>
